{
	"id": "69766967ded17faad5c82d32a9fae3b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"pedri/s.sol": {
				"content": "pragma solidity 0.8.10;\n\ncontract A{\n \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"pedri/s.sol": {
				"A": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"pedri/s.sol\":25:40  contract A{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"pedri/s.sol\":25:40  contract A{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122037daf0251ae492c1510af414bafcb2ea3927f2b1bca0381676d9cbb131e5252464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122037daf0251ae492c1510af414bafcb2ea3927f2b1bca0381676d9cbb131e5252464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xDA CREATE 0x25 BYTE 0xE4 SWAP3 0xC1 MLOAD EXP DELEGATECALL EQ 0xBA 0xFC 0xB2 0xEA CODECOPY 0x27 CALLCODE 0xB1 0xBC LOG0 CODESIZE AND PUSH23 0xD9CBB131E5252464736F6C634300080A00330000000000 ",
							"sourceMap": "25:15:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122037daf0251ae492c1510af414bafcb2ea3927f2b1bca0381676d9cbb131e5252464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xDA CREATE 0x25 BYTE 0xE4 SWAP3 0xC1 MLOAD EXP DELEGATECALL EQ 0xBA 0xFC 0xB2 0xEA CODECOPY 0x27 CALLCODE 0xB1 0xBC LOG0 CODESIZE AND PUSH23 0xD9CBB131E5252464736F6C634300080A00330000000000 ",
							"sourceMap": "25:15:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 40,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 40,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037daf0251ae492c1510af414bafcb2ea3927f2b1bca0381676d9cbb131e5252464736f6c634300080a0033",
									".code": [
										{
											"begin": 25,
											"end": 40,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 40,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 40,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 40,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 40,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 40,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pedri/s.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"pedri/s.sol\":{\"keccak256\":\"0x1e473ada1156fbe49c66bf192a1e7811b9702a86e6917ad380159052f37092c3\",\"urls\":[\"bzz-raw://a4fcdd1a1c27661adf48c035cc3ba22cd91fa6ce21a214442791cc753a9ebf84\",\"dweb:/ipfs/QmcUqZRghxydJ7jvs6SVc55pgo5gZPQQL8qEccGxoCBMpp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> pedri/s.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "pedri/s.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"pedri/s.sol": {
				"ast": {
					"absolutePath": "pedri/s.sol",
					"exportedSymbols": {
						"A": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "A",
							"nameLocation": "34:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "25:15:0",
							"usedErrors": []
						}
					],
					"src": "0:40:0"
				},
				"id": 0
			}
		}
	}
}